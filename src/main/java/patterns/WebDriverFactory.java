package patterns;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.logging.LogType;
import org.openqa.selenium.logging.LoggingPreferences;
import org.openqa.selenium.remote.RemoteWebDriver;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import java.util.logging.Level;

import static com.codeborne.selenide.Browsers.CHROME;
import static com.codeborne.selenide.Browsers.EDGE;
import static com.codeborne.selenide.Browsers.FIREFOX;

public class WebDriverFactory {


    /// –ó–ê–ö–û–ú–ò–¢–ï–õ–ê –¢.–ö –≤–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞ WebDriverFactory —Ç—ã –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é
    /// configProperties, –∞, –ø–µ—Ä–µ—à–ª–∞ –Ω–∞ System.getenv("SELENIUM_REMOTE_URL").
    // static TestPropertiesConfig configProperties = ConfigFactory.create(TestPropertiesConfig.class, System.getProperties());

    // –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    public static WebDriver createWebDriver(String browser) {
        WebDriver driver = switch (browser.toLowerCase()) {
            //case CHROME -> getChromeDriver();
            case CHROME -> initDriver();
            case FIREFOX -> new FirefoxDriver();
            case EDGE -> new EdgeDriver();
            default -> throw new IllegalArgumentException("Unsupported browser: " + browser);
        };

        //  –¥–æ–±–∞–≤–∏–ª–∏
        driver.manage().window().maximize();
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(2));
        return driver;
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è Chrome, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–π –∏ remote —Ä–µ–∂–∏–º

    public static WebDriver initDriver() {
        WebDriver driver;
        String remoteUrl = System.getenv("SELENIUM_REMOTE_URL");

        ChromeOptions options = new ChromeOptions();
        //options.addArguments("--headless");
        options.addArguments("--disable-gpu");
        options.addArguments("--no-sandbox");
        options.addArguments("--disable-dev-shm-usage");

        //  –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞
        LoggingPreferences logPrefs = new LoggingPreferences();
        logPrefs.enable(LogType.BROWSER, Level.ALL);
        options.setCapability("goog:loggingPrefs", logPrefs);

        if (remoteUrl != null && !remoteUrl.isBlank()) {
            try {
                driver = new RemoteWebDriver(new URL(remoteUrl), options);
                System.out.println("üîß Remote WebDriver –∑–∞–ø—É—â–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: " + remoteUrl);
            } catch (MalformedURLException e) {
                throw new RuntimeException("Malformed URL for Selenium Remote WebDriver", e);
            }
        } else {
            driver = new ChromeDriver(options);
            System.out.println("üñ•Ô∏è –õ–æ–∫–∞–ª—å–Ω—ã–π ChromeDriver –∑–∞–ø—É—â–µ–Ω");
        }

        driver.manage().window().maximize();
        return driver;
    }
}